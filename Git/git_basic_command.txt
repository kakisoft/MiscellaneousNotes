【公式サイト】
https://git-scm.com/

メモ
http://kakistamp.hatenadiary.jp/entry/2017/04/17/032953

## 用語など
HEAD      最新コミットの目印（現在使用しているブランチの先頭）
HEAD~　　　ヘッドの１つ前
HEAD~~　　 ヘッドの２つ前
HEAD~2　　 ヘッドの２つ前
HEAD^2     ヘッドの２人目の親


## コンフィグ
git config --global user.name "kakisoft"
git config --global user.email "hoge@gmail.com"
git config --global color.ul true
git config -l


##　ヘルプ
git <コマンド> --help
git <コマンド> -h
git help <コマンド>


# 初期化
git init
git init --bare  #共有リポジトリにする場合にはこのオプションをつけた方がいい？
ベアリポジトリ：ワークツリーを持たず、チェックアウト、マージができないリポジトリ。


## リモートリポジトリ追加
git remote add <name> <url>
（入力例）
git remote add origin /c/kaki/Git/ourweb.git
```git config -l``` で設定内容確認。

その後、
git merge --allow-unrelated-histories origin/master
※エラーが出たら？

## プッシュ（リモートリポジトリへ反映）
git push <name> <branch> 
git push origin master   #originに向かって、masterの内容を突っ込む
または、
git push -u origin master

## プル
git pull origin master


## リモートリポジトリ削除
git remote rm origin


## ログ
git log
git log --oneline
git log -p         #変更された場所も見る
git log --stat      #変更されたファイルの一覧
git log --oneline --graph --all  ## ツリー表示


## 状態確認
git status


## 差分チェック
git diff           #ワーキングエリアとステージングエリアの差分
git diff --cashed  #ステージングエリアとリポジトリの差分


## リセット
git reset --hard HEAD
git reset --hard HEAD^
git reset --hard <ID>


## ブランチ
git branch                 #ブランチ一覧
git checkout <ブランチ名>   #ブランチ切り替え
git merge <ブランチ名>      #マージ（あらかじめmasterに切り替え）
git branch -d <ブランチ名>  #ブランチ削除


## コンフリクト
<<<<<<< HEAD
eee
=======
add line
>>>>>>> hogehoge
git commit -m "conflict fixed"


## 削除
git rm [削除したいファイル]
git rm -r [削除したいディレクトリ]
git rm -cached [削除したいファイル]


## タグ
git tag               #タグ一覧
git tag <タグ名>       #最新のコミットにタグ付け
git tag <タグ名> <ID>  #IDのコミットにタグ付け
git tag -d <タグ名>    #タグ削除


## コミットの内容確認
git show <タグ名>  #IDでも可


## エイリアス
git config --global alias.co checkout
git config --global alias.st status
git config --global alias.br branch
git config --global alias.ci commit
git config -l    #リストアップ


## git push origin master の意味は？
push = アップロード
origin = リモートのサーバ名
master = デフォルトのブランチ名 (svnでのtrunkと同じ)

「ローカルのコードを、originというリモートサーバに対してアップロード。指定するブランチはmaster。」
masterをpushするときは"-u"は不要。
ローカルのブランチhogeをリモートの同名ブランチhogeにpushしたいときも"-u"は不要。


## git remote add origin git@github.com:reponame/sample.git
URLに"origin"という短縮名を付ける


## git pullについて
git fecth + git merge 
## git pull --rebase
git fetch + git rebase

